##
 # Copyright Â© Amazon.com and Affiliates: This deliverable is considered Developed Content as defined in the AWS Service Terms and the SOW between the parties dated 2024-01-16.
##

# Server configuration, http configuration is defined in base image
server {
    listen 8080;
    listen [::]:8080;
    index index.php index.html;
    
    root /var/www/public;

    # HTTP security headers

    #help prevent xss injection attack, 
    #default-src 'self' - only allow content to be loaded from the same origin ('self'). 
    #This means that resources like scripts, stylesheets, fonts, and images can only be 
    #loaded from the same domain as the web page itself.
    #always - This modifier ensures that the specified header is added to all responses, 
    #regardless of the status code returned by the server.
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline';  style-src 'self' 'unsafe-inline'; img-src 'self'; frame-ancestors 'self'";

    #The X-Frame-Options header is used to control whether a web page can be displayed 
    #in a frame or iframe, helping to mitigate clickjacking attacks.
    #always - X-Frame-Options header is added to all responses, regardless of their status code.
    add_header X-Frame-Options "SAMEORIGIN" always;

    # mitigate MIME-sniffing attacks in web browsers
    # Setting it to nosniff instructs the browser not to perform MIME-sniffing and to trust the 
    # Content-Type header provided by the server.
    add_header X-Content-Type-Options "nosniff" always;

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_pass unix:/run/php-fpm.socket;  # Path to PHP-FPM socket file

        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
}