# Server configuration, http configuration is defined in base image
server {
    listen 8080;
    listen [::]:8080;
    index index.php index.html;
    
    root /var/www/public;

    # HTTP security headers

    #help prevent xss injection attack, 
    #default-src 'self' - only allow content to be loaded from the same origin ('self'). 
    #this means that resources like scripts, stylesheets, fonts, and images can only be 
    #loaded from the same domain as the web page itself, however specific directives takes precedence over default-src
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; font-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self'; frame-ancestors 'self'";

    #The X-Frame-Options header is used to control whether a web page can be displayed 
    #in a frame or iframe, helping to mitigate clickjacking attacks.
    #always - X-Frame-Options header is added to all responses, regardless of their status code.
    add_header X-Frame-Options "SAMEORIGIN" always;

    # mitigate MIME-sniffing attacks in web browsers
    # Setting it to nosniff instructs the browser not to perform MIME-sniffing and to trust the 
    # Content-Type header provided by the server.
    add_header X-Content-Type-Options "nosniff" always;

    # Block access to files that can expose sensitive information.
    #
    # By default, block access to backup and source files that may be left by some
    # text editors and can pose a security risk when anyone has access to them.
    #
    # https://feross.org/cmsploit/
    #
    # (!) Update the `location` regular expression from below to include any files
    #     that might end up on your production server and can expose sensitive
    #     information about your website. These files may include: configuration
    #     files, files that contain metadata about the project (e.g.: project
    #     dependencies, build scripts, etc.).

    location ~* (?:#.*#|\.(?:bak|conf|dist|fla|in[ci]|log|orig|psd|sh|sql|sw[op])|~)$ {
        deny all;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_pass unix:/run/php-fpm.socket;  # Path to PHP-FPM socket file
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_read_timeout 600;
    }
    
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }
}
