services:
  proxy:
    container_name: proxy
    image: nginxproxy/nginx-proxy:1.5
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      default:
        aliases:
          - api.local.olcs.dev-dvsacloud.uk
          - ssweb.local.olcs.dev-dvsacloud.uk
          - iuweb.local.olcs.dev-dvsacloud.uk
          - cdn.local.olcs.dev-dvsacloud.uk

  api:
    build:
      context: infra/docker/api
      target: development
    expose:
      - 8080
    volumes:
      - ./app/api:/var/www/html
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY-}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN-}
      PHP_IDE_CONFIG: "serverName=vol.local.api"
      VIRTUAL_HOST: api.local.olcs.dev-dvsacloud.uk
      VIRTUAL_PORT: 8080

  cli:
    build:
      context: infra/docker/cli
      target: development
    tty: true
    volumes:
      - ./app/api:/var/www/html
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY-}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN-}
      PHP_IDE_CONFIG: "serverName=vol.local.api"

  selfserve:
    build:
      context: infra/docker/selfserve
      target: development
    expose:
      - 8080
    volumes:
      - ./app/selfserve:/var/www/html
    environment:
      ELASTICACHE_URL: tcp://redis:6379
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY-}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN-}
      PHP_IDE_CONFIG: "serverName=vol.local.selfserve"
      VIRTUAL_HOST: ssweb.local.olcs.dev-dvsacloud.uk
      VIRTUAL_PORT: 8080

  internal:
    build:
      context: infra/docker/internal
      target: development
    expose:
      - 8080
    volumes:
      - ./app/internal:/var/www/html
    environment:
      ELASTICACHE_URL: tcp://redis:6379
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY-}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN-}
      PHP_IDE_CONFIG: "serverName=vol.local.internal"
      VIRTUAL_HOST: iuweb.local.olcs.dev-dvsacloud.uk
      VIRTUAL_PORT: 8080

  cdn:
    image: node:20
    volumes:
      - ./app/cdn:/var/www/html
    working_dir: /var/www/html
    command: bash -c "npm install && npm start"
    expose:
      - 7001
    environment:
      VIRTUAL_HOST: cdn.local.olcs.dev-dvsacloud.uk
      VIRTUAL_PORT: 7001

  redis:
    image: redis:7
    expose:
      - 6379

  db:
    image: mysql:8.0
    command: --log_bin_trust_function_creators=1 --sql_mode=NO_ENGINE_SUBSTITUTION
    volumes:
      - db-data:/var/lib/mysql
      - ${OLCS_ETL_DIR:-../olcs-etl}:/var/lib/etl
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: olcs
      MYSQL_DATABASE: olcs_be
      MYSQL_USER: mysql
      MYSQL_PASSWORD: olcs
    extra_hosts:
      - "host.docker.internal:host-gateway"

  openldap:
    image: bitnami/openldap:2.6
    ports:
      - "1389:1389"
    environment:
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=admin
      - LDAP_ROOT=dc=vol,dc=dvsa
      - LDAP_ADMIN_DN=cn=admin,dc=vol,dc=dvsa
    volumes:
      - "openldap-data:/bitnami/openldap"

  mailpit:
    image: axllent/mailpit:latest
    container_name: mailpit
    ports:
      - "1025:1025"
      - "8025:8025"
    environment:
      VIRTUAL_HOST: mailpit.local.olcs.dev-dvsacloud.uk
      VIRTUAL_PORT: 8025

  mock-govuk-signin:
    container_name: mock-govuk-signin
    build: ./app/mock-govuk-signin
    expose:
      - 8080
    ports:
      - "8090:8080"
    environment:
      NODE_ENV: development
      PORT: 8080
      VALIDATION_MODE: permissive
      ISSUER_URL: http://mockgovsignin.local.olcs.dev-dvsacloud.uk
      LOG_LEVEL: debug
      VIRTUAL_HOST: mockgovsignin.local.olcs.dev-dvsacloud.uk
      VIRTUAL_PORT: 8080
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db-data:
  openldap-data:
