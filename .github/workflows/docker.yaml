name: Docker

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: false
      project:
        type: string
        required: true
      should-upload-artefact-to-ecr:
        type: boolean
        required: true
        default: false
      app-artefact-name:
        type: string
        required: true

jobs:
  check-ecr:
    name: Check ECR
    if: ${{ inputs.should-upload-artefact-to-ecr }}
    runs-on: ubuntu-latest
    outputs:
      image-exists: ${{ steps.check-ecr.outputs.exists }}
    env:
      PROJECT: ${{ inputs.project }}
      OBJECT_PREFIX: ${{ inputs.app-artefact-name }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.TF_OIDC_ROLE }}
          aws-region: ${{ vars.TF_AWS_REGION }}
      - name: Check if image already exists in ECR
        id: check-ecr
        # Check if the image already exists in ECR, so we don't have to build it again.
        run: exit 0

  lint:
    name: Lint
    needs:
      - check-ecr
    runs-on: ubuntu-latest
    if: ${{ always() && (needs.check-ecr.result == 'skipped' || !needs.check-ecr.outputs.image-exists) }}
    steps:
      - name: Lint
        run: exit 0

  build:
    name: Build
    needs:
      - check-ecr
    runs-on: ubuntu-latest
    if: ${{ always() && (needs.check-ecr.result == 'skipped' || !needs.check-ecr.outputs.image-exists) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || null }}
          path: infra/docker/${{ inputs.project }}
      - uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.app-artefact-name }}
          path: app/${{ inputs.project }}
      - name: Build
        run: exit 0
