name: Assets

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: false
      account:
        description: "Environment to deploy"
        type: string
        required: true
      version:
        type: string
        required: false
      branch:
        description: "Branch name for on-demand builds"
        type: string
        required: false
      push:
        type: boolean
        default: false
        required: false
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch name to build assets from"
        type: string
        required: true
        default: main

concurrency:
  group: assets-${{ inputs.account }}-${{ inputs.branch || 'version' }}

jobs:
  build:
    name: Build${{ inputs.push && ' and Push' || '' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/cdn
    env:
      ASSET_BUCKET: "vol-app-assets"
      # For branch builds always use nonprod accountm CD pipeline as normal to both
      ACCOUNT_NUMBER: ${{ inputs.branch && vars.ACCOUNT_NONPROD || vars[inputs.account == 'prod' && 'ACCOUNT_PROD' || 'ACCOUNT_NONPROD'] }}
      AWS_OIDC_ROLE: ${{ inputs.branch && vars.ACCOUNT_NONPROD_TF_OIDC_ROLE || vars[inputs.account == 'prod' && 'ACCOUNT_PROD_TF_OIDC_ROLE' || 'ACCOUNT_NONPROD_TF_OIDC_ROLE'] }}
      AWS_REGION: ${{ vars.DVSA_AWS_REGION }}
      S3_PATH: ${{ inputs.branch && format('branch-{0}', inputs.branch) || inputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || inputs.branch || null }}
          sparse-checkout: app/cdn
          fetch-depth: ${{ (!inputs.ref && !inputs.branch) && 1 || 0 }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: app/cdn/package.json

      - run: npm install --prefer-offline
        shell: bash

      - run: npm run build:production
        shell: bash

      - name: Configure AWS credentials
        if: ${{ inputs.push }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_OIDC_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload assets to CloudFront assets bucket
        if: ${{ inputs.push }}
        run: |
          echo "Uploading assets to s3://${{ env.ACCOUNT_NUMBER }}-${{ env.ASSET_BUCKET }}/${{ env.S3_PATH }}/"
          aws s3 cp ./public s3://${{ env.ACCOUNT_NUMBER }}-${{ env.ASSET_BUCKET }}/${{ env.S3_PATH }}/ --recursive

      - name: Output S3 path
        if: ${{ inputs.push }}
        run: |
          echo "Assets uploaded to: s3://${{ env.ACCOUNT_NUMBER }}-${{ env.ASSET_BUCKET }}/${{ env.S3_PATH }}/" >> $GITHUB_STEP_SUMMARY
