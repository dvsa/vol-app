name: Assets

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: false
      version:
        type: string
        required: true
      push:
        type: boolean
        default: false
        required: false

jobs:
  build:
    name: Build${{ inputs.push && ' and Push' || '' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/cdn
    env:
      ASSET_BUCKET: "vol-app-assets"
      AWS_OIDC_ROLE: ${{ vars[format('ACCOUNT_nonprod_TF_OIDC{0}_ROLE', (inputs.push && '' || '_READONLY'))] || (inputs.push && vars.TF_OIDC_ROLE || vars.TF_OIDC_READONLY_ROLE) }}
      AWS_REGION: ${{ vars.TF_AWS_REGION }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || null }}
          sparse-checkout: app/cdn
          fetch-depth: ${{ !inputs.ref && 1 || 0 }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          cache-dependency-path: app/cdn/package.json

      - run: npm install --prefer-offline
        shell: bash

      - run: npm run build:container
        shell: bash

      - name: Configure AWS credentials
        if: ${{ inputs.push }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_OIDC_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload assets to CloudFront assets bucket
        if: ${{ inputs.push }}
        run: aws s3 cp ./public s3://${{ env.ASSET_BUCKET }}/${{ inputs.version }}/ --recursive
