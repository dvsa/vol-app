name: PHP

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: false
      project:
        type: string
        required: true
      artefact-name:
        type: string
        required: false
      should-upload-artefact:
        type: boolean
        required: false
        default: false
      retention-days:
        type: number
        required: false
        default: 7

jobs:
  warm-cache:
    name: Warm cache
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/${{ inputs.project }}
    env:
      # Temporary until this repository becomes a mono-repository: https://dvsa.atlassian.net/browse/VOL-4961.
      REMOTE_REPOSITORY: ${{ inputs.project == 'api' && 'dvsa/olcs-backend' || format('dvsa/olcs-{0}', inputs.project) }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ env.REMOTE_REPOSITORY }}
          ref: ${{ inputs.ref || null }}
          path: app/${{ inputs.project }}
          fetch-depth: ${{ !inputs.ref && 1 || 0 }}
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: none
          extensions: intl, pdo_mysql, redis, mbstring
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles(format('**/app/{0}/composer.lock', inputs.project)) }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

  test:
    name: Test
    needs:
      - warm-cache
    runs-on: ubuntu-latest
    container: ghcr.io/dvsa/vol-app/${{ inputs.project }}:latest
    defaults:
      run:
        working-directory: app/${{ inputs.project }}
    env:
      # Temporary until this repository becomes a mono-repository.
      REMOTE_REPOSITORY: ${{ inputs.project == 'api' && 'dvsa/olcs-backend' || format('dvsa/olcs-{0}', inputs.project) }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ env.REMOTE_REPOSITORY }}
          ref: ${{ inputs.ref || null }}
          path: app/${{ inputs.project }}
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles(format('**/app/{0}/composer.lock', inputs.project)) }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Test
        run: vendor/bin/phpunit

  # static-analysis:
  #   name: ${{ matrix.task.description }}
  #   needs:
  #     - warm-cache
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       task:
  #         - description: PHPStan
  #           command: phpstan analyze --no-progress
  #           tools: phpstan
  #         - description: PHP CodeSniffer
  #           command: phpcs -q
  #           tools: phpcs
  #         - description: Psalm
  #           command: psalm --no-progress --output-format=github
  #           tools: psalm
  #   # Remove once: https://dvsa.atlassian.net/browse/VOL-4787 & https://dvsa.atlassian.net/browse/VOL-4788 are resolved.
  #   continue-on-error: true
  #   defaults:
  #     run:
  #       working-directory: app/${{ inputs.project }}
  #   env:
  #     # Temporary until this repository becomes a mono-repository: https://dvsa.atlassian.net/browse/VOL-4961.
  #     REMOTE_REPOSITORY: ${{ inputs.project == 'api' && 'dvsa/olcs-backend' || format('dvsa/olcs-{0}', inputs.project) }}
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         repository: ${{ env.REMOTE_REPOSITORY }}
  #         ref: ${{ inputs.ref || null }}
  #         path: app/${{ inputs.project }}
  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: "8.2"
  #         coverage: none
  #         extensions: intl, pdo_mysql, redis, mbstring
  #         tools: ${{ matrix.task.tools }}
  #     - name: Get composer cache directory
  #       id: composer-cache
  #       run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
  #     - name: Cache Composer packages
  #       uses: actions/cache@v4
  #       with:
  #         path: ${{ steps.composer-cache.outputs.dir }}
  #         key: ${{ runner.os }}-composer-${{ hashFiles(format('**/app/{0}/composer.lock', inputs.project)) }}
  #         restore-keys: ${{ runner.os }}-composer-
  #     - name: Install Composer dependencies
  #       run: composer install --no-progress --no-interaction
  #     - name: Execute ${{ matrix.task.description }}
  #       run: ${{ matrix.task.command }}

  package:
    name: Package
    needs:
      - test
      #- static-analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/${{ inputs.project }}
    env:
      # Temporary until this repository becomes a mono-repository: https://dvsa.atlassian.net/browse/VOL-4961.
      REMOTE_REPOSITORY: ${{ inputs.project == 'api' && 'dvsa/olcs-backend' || format('dvsa/olcs-{0}', inputs.project) }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ env.REMOTE_REPOSITORY }}
          ref: ${{ inputs.ref || null }}
          path: app/${{ inputs.project }}
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: none
          extensions: intl, pdo_mysql, redis, mbstring
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles(format('**/app/{0}/composer.lock', inputs.project)) }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --no-dev --optimize-autoloader
      - name: Archive
        run: tar -czf ${{ inputs.project }}.tar.gz *
      - name: Upload artefact
        if: ${{ inputs.should-upload-artefact }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artefact-name }}
          path: app/${{ inputs.project }}/${{ inputs.project }}.tar.gz
          retention-days: ${{ inputs.retention-days }}
