name: PHP

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: false
      project:
        type: string
        required: true
      artefact-name:
        type: string
        required: false
      should-upload-artefact:
        type: boolean
        required: false
        default: false
      retention-days:
        type: number
        required: false
        default: 7

jobs:
  warm-cache:
    name: Warm cache
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/${{ inputs.project }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || null }}
          sparse-checkout: app/${{ inputs.project }}
          fetch-depth: ${{ !inputs.ref && 1 || 0 }}
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: none
          extensions: intl, pdo_mysql, redis, mbstring, igbinary
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles(format('**/app/{0}/composer.lock', inputs.project)) }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

  test:
    name: Test
    needs:
      - warm-cache
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/${{ inputs.project }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || null }}
          sparse-checkout: app/${{ inputs.project }}
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: none
          extensions: intl, pdo_mysql, redis, mbstring
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles(format('**/app/{0}/composer.lock', inputs.project)) }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Test
        run: vendor/bin/phpunit

  static-analysis:
    name: Static Analysis
    needs:
      - warm-cache
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/${{ inputs.project }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || null }}
          sparse-checkout: app/${{ inputs.project }}
          fetch-depth: ${{ !inputs.ref && 1 || 0 }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: none
          extensions: intl, pdo_mysql, redis, mbstring

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles(format('**/app/{0}/composer.lock', inputs.project)) }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse --configuration=phpstan.neon.dist --memory-limit=1048M

      - name: Run PHP CodeSniffer
        run: vendor/bin/phpcs --standard=phpcs.xml.dist

      - name: Run PHP Psalm
        run: vendor/bin/psalm

  package:
    name: Package
    needs:
      - test
      - static-analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app/${{ inputs.project }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || null }}
          sparse-checkout: app/${{ inputs.project }}
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          coverage: none
          extensions: intl, pdo_mysql, redis, mbstring
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles(format('**/app/{0}/composer.lock', inputs.project)) }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        run: composer install --no-progress --prefer-dist --no-dev --optimize-autoloader
      - name: Archive
        run: tar -czf ${{ inputs.project }}.tar.gz *
      - name: Upload artefact
        if: ${{ inputs.should-upload-artefact }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artefact-name }}
          path: app/${{ inputs.project }}/${{ inputs.project }}.tar.gz
          retention-days: ${{ inputs.retention-days }}
